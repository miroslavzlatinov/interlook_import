# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
# - { resource: "@App/Resources/config/services.yml" }

parameters:
    locale: 'en'
    env(wsdl_url): ''
    env(wsdl_live_url): ''
    wsdl_url: '%env(wsdl_url)%'
    wsdl_live_url: '%env(wsdl_live_url)%'
    wsdl_user: '%env(SERUSER)%'
    wsdl_pass:  '%env(SERPASS)%'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    get_set_method_normalizer:
            class: Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer
            public: false
            tags:
                - { name: serializer.normalizer }


    complite_soap_client:
        class: App\Client\Soap\IntegrationService
        arguments: [[],"%wsdl_url%"]

    interlook_soap_client:
        class: App\Services\InterlookClient
        public: true
        arguments: ['@complite_soap_client']

    interlook.sql.data:
          class:     App\Services\InterlookData

          public: true

    interlook.create.reservation_constructor:
              class:     App\Services\ReservConstructor
              public: true
    chart:data:
          class: App\Services\ChartData
          public: true


 #add service for doctrine APCu cahe

    doctrine.apcu.cache:
          class: Doctrine\Common\Cache\ApcuCache

    validator.mapping.cache:
          class: Symfony\Component\Validator\Mapping\Cache\DoctrineCache
          arguments: ['@doctrine.apcu.cache']

    serializer.mapping.cache.apcu:
        class: Doctrine\Common\Cache\ApcuCache